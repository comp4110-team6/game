[gd_scene load_steps=13 format=2]

[ext_resource path="res://src/ui/heart.png" type="Texture" id=1]
[ext_resource path="res://src/ui/fonts/PatuaOne-Regular.ttf" type="DynamicFontData" id=2]
[ext_resource path="res://src/scenes/Bucket.tscn" type="PackedScene" id=3]
[ext_resource path="res://src/audio/sounds/correct.ogg" type="AudioStream" id=4]
[ext_resource path="res://src/audio/sounds/incorrect.ogg" type="AudioStream" id=5]
[ext_resource path="res://src/audio/sounds/three.ogg" type="AudioStream" id=6]
[ext_resource path="res://src/audio/sounds/two.ogg" type="AudioStream" id=7]
[ext_resource path="res://src/audio/sounds/one.ogg" type="AudioStream" id=8]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var height = ProjectSettings.get_setting(\"display/window/size/height\")
const ORB_BUFFER = 60 # half of orb sprite plus 30

onready var Orb = preload(\"res://src/scenes/Orb.tscn\")
onready var Orb1 = null
onready var Orb2 = null
onready var Orb3 = null
onready var Orbs = [Orb1, Orb2, Orb3]

var question = \"\"
var answers = []

var problems = 30
var hearts = 3
var score = 0
var difficulty = 1

var seconds = 3
var tierces = 60

func _physics_process(delta):
	tierces += 1
	if seconds > -1:
		if tierces > 59:
			tierces = 0
			if seconds > 0:
				$Label3.text = String(seconds)
				if seconds == 3:
					$Sounds/Three.play()
				elif seconds == 2:
					$Sounds/Two.play()
				elif seconds == 1:
					$Sounds/One.play()
			if seconds == 0:
				$Label2.text = \"Score: \" + String(score)
				$Label3.text = \"\"
				$Bucket.visible = true
				$Hearts.visible = true
			seconds -= 1
			return
	else:
		for i in range(3):
			if Orbs[i] != null:
				if Orbs[i].IsCorrect == 0:
					if Orbs[i].position.y + ORB_BUFFER >= height:
						DeleteOrbSelf(i)
					elif Orbs[i].move_and_collide(Vector2(0,0)) != null:
						$Sounds/Incorrect.play()
						UpdateHearts()
						DeleteOrbSelf(i)
						DeleteOrbOthers(i)
				elif Orbs[i].IsCorrect == 1:
					if Orbs[i].position.y + ORB_BUFFER >= height:
						$Sounds/Incorrect.play()
						UpdateHearts()
						DeleteOrbSelf(i)
						DeleteOrbOthers(i)
					elif Orbs[i].move_and_collide(Vector2(0,0)) != null:
						$Sounds/Correct.play()
						UpdateScore()
						DeleteOrbSelf(i)
						DeleteOrbOthers(i)
		if (Orbs[0] == null) and (Orbs[1] == null) and (Orbs[2] == null):
			if problems > 0:
				OrbsSpawner()
				problems -= 1

func DeleteOrbSelf(i):
	Orbs[i].queue_free()
	Orbs[i] = null

func DeleteOrbOthers(i):
	if Orbs[(i+1)%3] != null:
		Orbs[(i+1)%3].queue_free()
		Orbs[(i+1)%3] = null
	if Orbs[(i+2)%3] != null:
		Orbs[(i+2)%3].queue_free()
		Orbs[(i+2)%3] = null

func UpdateHearts():
	if hearts > 2:
		hearts -= 1
		if hearts == 2:
			$Hearts/Heart3.visible = false
		if hearts == 1:
			$Hearts/Heart2.visible = false
	elif hearts == 1:
		problems = 0
		$Hearts/Heart1.visible = false
		$Label1.text = \"Game Over\"

func UpdateScore():
	score += 1
	$Label2.text = \"Score: \" + String(score)

func OrbsSpawner():
	# seed rand
	randomize()
	
	# randomly get orb positions
	var orb_positions = []
	orb_positions.append((randi() % 352) + 50)
	orb_positions.append((randi() % 356) + 462)
	orb_positions.append((randi() % 352) + 878)
	
	ProblemGenerator(\"addition\")
	
	for i in range(3):
		# instance 3 new orbs
		Orbs[i] = Orb.instance()
		add_child(Orbs[i])
		
		# place orbs into 3 predetermined orb lanes
		Orbs[i].position.x = orb_positions[i]
		
		# randomly assign orbs' speeds
		var speed = 0
		if difficulty == 3:
			speed = 150
		if difficulty == 2:
			speed = 100
		if difficulty == 1:
			speed = 75
		Orbs[i].speed = (randi() % 51) + speed
		
		# apply answers and correctness status to orbs
		Orbs[i].get_node(\"Sprite/Label\").text = String(answers[i].x)
		Orbs[i].IsCorrect = answers[i].y
	
	$Label1.text = question

# 'type': \"addition\", \"subtraction\", & \"multiplication\"
func ProblemGenerator(type):
	# seed rand
	randomize()
	
	var answer = 0
	var symbol = \"\"
	var temp_answers = []
	
	# get two numbers, each from 0 to 12
	var num1 = randi() % 13
	var num2 = randi() % 13
	
	if type == \"addition\":
		answer = num1 + num2
		symbol = \" + \"
	elif type == \"subtraction\":
		answer = num1 - num2
		symbol = \" - \"
	elif type == \"multiplication\":
		answer = num1 * num2
		symbol = \" * \"
	
	# update question
	question = String(num1) + symbol + String(num2)
	
	# generate and update answers
	answers.clear()
	answers.append(Vector2(answer, 1))
	for i in range(3):
		temp_answers.append(Vector2(answer + (i + 1), 0))
		temp_answers.append(Vector2(answer - (i + 1), 0))
	if num1 != 0:
		temp_answers.append(Vector2(answer + num1, 0))
		temp_answers.append(Vector2(answer - num1, 0))
	if num2 != 0:
		temp_answers.append(Vector2(answer + num2, 0))
		temp_answers.append(Vector2(answer - num2, 0))
	temp_answers.shuffle()
	answers.append(temp_answers[0])
	answers.append(temp_answers[1])
	answers.shuffle()
"

[sub_resource type="DynamicFont" id=2]
size = 60
font_data = ExtResource( 2 )

[sub_resource type="DynamicFont" id=3]
size = 30
font_data = ExtResource( 2 )

[sub_resource type="DynamicFont" id=4]
size = 200
font_data = ExtResource( 2 )

[node name="Level" type="Node2D"]
script = SubResource( 1 )

[node name="Hearts" type="HBoxContainer" parent="."]
editor/display_folded = true
visible = false
margin_left = 20.0
margin_top = 20.0
margin_right = 1260.0
margin_bottom = 70.0
rect_min_size = Vector2( 0, 50 )
alignment = 2

[node name="Heart1" type="TextureRect" parent="Hearts"]
margin_left = 1082.0
margin_right = 1132.0
margin_bottom = 50.0
rect_min_size = Vector2( 50, 50 )
size_flags_horizontal = 4
size_flags_vertical = 4
texture = ExtResource( 1 )
expand = true
stretch_mode = 1

[node name="Heart2" type="TextureRect" parent="Hearts"]
margin_left = 1136.0
margin_right = 1186.0
margin_bottom = 50.0
rect_min_size = Vector2( 50, 50 )
size_flags_horizontal = 4
size_flags_vertical = 4
texture = ExtResource( 1 )
expand = true
stretch_mode = 1

[node name="Heart3" type="TextureRect" parent="Hearts"]
margin_left = 1190.0
margin_right = 1240.0
margin_bottom = 50.0
rect_min_size = Vector2( 50, 50 )
size_flags_horizontal = 4
size_flags_vertical = 4
texture = ExtResource( 1 )
expand = true
stretch_mode = 1

[node name="Label1" type="Label" parent="."]
margin_right = 1280.0
margin_bottom = 160.0
custom_fonts/font = SubResource( 2 )
custom_colors/font_color = Color( 0.878431, 0.878431, 0.878431, 1 )
align = 1
valign = 1

[node name="Label2" type="Label" parent="."]
margin_left = 20.0
margin_right = 1260.0
margin_bottom = 60.0
custom_fonts/font = SubResource( 3 )
custom_colors/font_color = Color( 0.878431, 0.878431, 0.878431, 1 )
valign = 1

[node name="Label3" type="Label" parent="."]
margin_right = 1280.0
margin_bottom = 720.0
custom_fonts/font = SubResource( 4 )
align = 1
valign = 1

[node name="Bucket" parent="." instance=ExtResource( 3 )]
visible = false
position = Vector2( 640, 660 )

[node name="Sounds" type="Node2D" parent="."]
editor/display_folded = true

[node name="Correct" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 4 )
volume_db = -20.0

[node name="Incorrect" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 5 )
volume_db = -20.0

[node name="Three" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 6 )
volume_db = -10.0

[node name="Two" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 7 )
volume_db = -10.0

[node name="One" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 8 )
volume_db = -10.0
